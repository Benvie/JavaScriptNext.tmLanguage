<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>re</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(/\*|\{|\()</string>
	<key>foldingStopMarker</key>
	<string>(\*/|\}|\))</string>
	<key>name</key>
	<string>Regular Expressions (Javascript Next)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#anchor</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#backref</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quantifier</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#group-assertion</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#group-definition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#character-class</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#character-class-definition</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>anchor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[bB]|\^|\$</string>
					<key>name</key>
					<string>keyword.control.anchor.regexp</string>
				</dict>
			</array>
		</dict>
		<key>backref</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[1-9][0-9]*</string>
					<key>name</key>
					<string>keyword.other.back-reference.regexp</string>
				</dict>
			</array>
		</dict>
		<key>character-class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[wWsSdD]|\.</string>
					<key>name</key>
					<string>constant.other.character-class.escape.backslash.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\([trnvf0\\]|c[A-Z]|x[\da-fA-F]{2}|u[\da-fA-F]{4}|.)</string>
					<key>name</key>
					<string>constant.character.escape.backslash.regexp</string>
				</dict>
			</array>
		</dict>
		<key>character-class-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\[)(\^)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.negation.regexp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>constant.other.character-class.set.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#character-class</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.other.character-class.escape.backslash.regexp</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regexp</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>constant.other.character-class.escape.backslash.regexp</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regexp</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)
  (
    (\\[wWsSdD]|\.)|
    (\\([trnvf0]|c[A-Z]|x[\da-fA-F]{2}|u[\da-fA-F]{4}|.))
  )\-
  (
    (\\[wWsSdD]|\.)|
    (\\([trnvf0]|c[A-Z]|x[\da-fA-F]{2}|u[\da-fA-F]{4}|.))
  )</string>
							<key>name</key>
							<string>constant.other.character-class.range.regexp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>group-assertion</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\()((\?=)|(\?!))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.assertion.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.look-ahead.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.negative-look-ahead.regexp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.assertion.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>group-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\()((\?:))?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.capture.regexp</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.capture.regexp</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.no-capture.regexp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.operator.or.regexp</string>
				</dict>
			</array>
		</dict>
		<key>quantifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\?|\*\??|\+\??)|\{(\d+,\d+|\d+,|\d+)\}</string>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.regexp.js</string>
	<key>uuid</key>
	<string>6D74161E-E1A2-4AF3-922D-759E88DEFF63</string>
</dict>
</plist>
